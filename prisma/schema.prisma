// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  username    String   @unique
  hash        String
  name        String
  phoneNumber String   @unique @db.VarChar(15)
  city        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  posts       Post[]   @relation("posts of user")
  staredPosts Post[]   @relation("stared posts of user")
}

model Admin {
  id               String @id @default(uuid())
  name             String
  username         String @unique
  hash             String
  responsibility   String
  incomingRequests Post[]
  role             Role   @default(ADMIN)
}

model Post {
  id            String         @id @default(uuid())
  title         String
  city          String
  price         String?
  Description   String?
  pictures      String[]
  tags          String[]
  user          User?          @relation("posts of user", fields: [userID], references: [id])
  userID        String
  userWhoStared User?          @relation("stared posts of user", fields: [userStaredID], references: [id])
  userStaredID  String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  carPost       CarPost?
  housePost     HousePost?
  furniturePost FurniturePost?
  admin         Admin?         @relation(fields: [adminId], references: [id])
  adminId       String?
  isApproved    Boolean        @default(false)
}

model CarPost {
  id             String  @id @default(uuid())
  usage          String
  color          String
  model          String
  motorCondition String?
  gearbox        String?
  post           Post    @relation(fields: [postID], references: [id])
  postID         String  @unique
}

model HousePost {
  id                  String  @id @default(uuid())
  area                Int
  yearOfBuild         Int
  pricePerMeter       Int?
  numberOfRooms       Int
  numberOfTotalFloors Int
  numberOfFloor       Int
  hasElevator         Boolean
  hasParking          Boolean
  post                Post    @relation(fields: [postID], references: [id])
  postID              String  @unique
}

model FurniturePost {
  id        String @id @default(uuid())
  brand     String
  condition String
  post      Post   @relation(fields: [postID], references: [id])
  postID    String @unique
}

enum Role {
  USER
  ADMIN
}
